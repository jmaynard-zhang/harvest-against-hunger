y=lat,
alpha=total,
text=paste("farm:", `Farm Name`)),
color="dark green") +
theme_void() +
coord_map()
# test
map.plot <- ggplot() +
geom_polygon(data=kingco,
aes(x=long, y=lat, group=group),
alpha=0.3,
fill="red") +
geom_point(data=`Total Orders`,
aes(x=lon,
y=lat,
alpha=total,
text=paste("farm:", `Farm Name`)),
color="dark green") +
theme_void() +
coord_map()
map.plot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# -- Remove farms with no locations --
df_map <- df %>%
filter(!(`Farm Name` == "Lily Fields"))
View(df_map)
runApp()
View(`Total Orders`)
runApp()
View(df)
View(df_map)
runApp()
runApp()
# Add numbers together in excel
write.csv(df_test, "fix_pounds_purchased.csv", row.names = F)
load_pckg()
# -- Load data --
# KCFS 2019
X19_list <- list()
X19_programs <- excel_sheets(path="./Data/KCFS 2019.xlsx")
sheets <- 3:length(X19_programs)
for (i in sheets) {
temp <- read_excel("./Data/KCFS 2019.xlsx",
skip = 2,
sheet = X19_programs[i])
X19_list[[i - 2]] <- temp
}
# KCFS 2020
X20_list <- list()
X20_programs <- excel_sheets(path="./Data/KCFS 2020.xlsx")
sheets <- 2:length(X19_programs)
for (i in sheets) {
temp <- read_excel("./Data/KCFS 2020.xlsx",
skip = 3,
sheet = X20_programs[i])
X20_list[[i - 1]] <- temp
}
# CARES
cares.list <- list()
cares_programs <- excel_sheets(path="./Data/CARES.xlsx")
sheets <- 2:length(cares_programs)
for (i in sheets) {
temp <- read_excel("./Data/CARES.xlsx",
skip = 1,
sheet = cares_programs[i])
cares.list[[i - 1]] <- temp
}
# KCFS Funds
funds <- read_excel("./Data/KCFS $.xlsx") %>%
pivot_longer(!Organization,
names_to="year",
values_to="funds_dispersed") %>%
mutate(year=as.Date(ISOdate(year, 1, 1)))
# -- Select & Filter --
# Append lists
X19_list <- X19_list %>%
lapply(rename, `Order Date` = `Contract Date`)
x <- c()
for (i in 1:length(X19_list)) {
temp_cols <- colnames(X19_list[[i]])
temp_df <- X19_list[[i]]
if ("Contract Amount" %in% temp_cols) {
X19_list[[i]] <- temp_df %>%
rename(`Order Amount ($)` = `Contract Amount`)
} else if ("\r\nContract Amount" %in% temp_cols) {
X19_list[[i]] <- temp_df %>%
rename(`Order Amount ($)` = `\r\nContract Amount`)
} else {
x <- append(x, i)
}
}
list <- append(X19_list, X20_list)
list <- append(list, cares.list)
## Select relevant columns
list <- list %>%
lapply(select, `Farm Name`,
`Order Date`,
`Pounds purchased`,
`Order Amount ($)`
)
## Filter out "Totals"
list <- list %>%
lapply(subset, `Farm Name` != "Totals")
# -- Small Fixes --
## Filter out empty dfs
list <- list[lapply(list, nrow) > 0]
for (i in 1:length(list)) {
curr = list[[i]]
## Order Date to consistent date format
if (typeof(curr$`Order Date`) == "character") {
list[[i]]$`Order Date` = as.Date(
as.numeric(curr$`Order Date`), origin = "1899-12-30")
} else {
list[[i]]$`Order Date` = as.Date(curr$`Order Date`)
}
}
# -- Merge lists --
df <- rbindlist(list)
# -- Fixing `Pounds purchased` --
# Remove unnecessary numbers by removing everything after the '=', '(', and
# '$' signs (inclusive)
remove <- "\\(.*|=.*|\\$.*| +$"
df_test <- df %>%
mutate(`Pounds purchased`=gsub(pattern=remove,
replacement = "",
df$`Pounds purchased`))
# # Extract the first number of each cell
# df <- df %>%
#   mutate(`Pounds purchased`=stri_extract_first_regex(`Pounds purchased`,
#                                                      "[0-9]+"))
# Replace non-numbers with spaces
remove2 <- "[^0-9.-]"
df_test <- df_test %>%
mutate(`Pounds purchased`=gsub(pattern=remove2,
replacement = " ",
df_test$`Pounds purchased`))
# Trim whitespace
df_test <- df_test %>%
mutate(`Pounds purchased`=str_trim(str_squish(df_test$`Pounds purchased`)))
# Replace spaces with `+`
df_test <- df_test %>%
mutate(`Pounds purchased`=gsub(pattern=" ",
replacement="+",
df_test$`Pounds purchased`))
# Add numbers together in excel
write.csv(df_test, "fix_pounds_purchased.csv", row.names = F)
df_test <- read.csv("./Data/fix_pounds_purchased.csv")
View(df_test)
View(df)
# Type char to num
df_test <- df_test %>%
mutate(`Pounds purchased`=as.numeric(`Pounds purchased`))
# Type char to num
df_test <- df_test %>%
mutate(`Pounds purchased`=as.numeric(`Pounds.purchased`))
# Type char to num
df_test <- df_test %>%
mutate(`Pounds purchased`=as.numeric(`Pounds.purchased`, na.rm=T))
View(df_test)
df_test <- read.csv("./Data/fix_pounds_purchased.csv")
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df_fix_lbs <- read.csv("./Data/fix_pounds_purchased.csv")
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df_fix_lbs <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Convert pounds purchased from type char to type num
mutate(`Pounds.purchased`=as.numeric(`Pounds.purchased`))
View(df_fix_lbs)
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Convert pounds purchased from type char to type num
mutate(`Pounds.purchased`=as.numeric(`Pounds.purchased`))
View(df)
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
View(correct_farms)
?left_join
df <- df %>%
left_join(correct_farms, by=c("Farm.Name"="Farm Name"))
df <- df %>%
select(-Farm.Name)
df <- df %>%
rename(Farm.Name=`Correct Farm Name`)
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
shiny::runApp()
source("Functions.R")
source("Data/Data Filtering.R")
View(df)
View(df)
View(df)
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Filtering.R")
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
View(df)
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
View(df)
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Filtering.R")
# -- Load data --
source("./Data/Data Compilation.R")
# ~~ LINE DATA ~~
# -- Num farms served --
`Number of Farms Served Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
unique() %>%
group_by(order_month) %>%
summarize(num_farms=n()) %>%
mutate(num_farms_cum=cumsum(num_farms)) %>%
na.omit()
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Convert pounds purchased from type char to type num
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`)) %>%
mutate(Order.Date=as.Date(Order.Date))
View(df)
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Convert pounds purchased from type char to type num
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`)) %>%
mutate(Order.Date=as.Date(Order.Date))
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Char to num type
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`)) %>%
# Char to date type
mutate(Order.Date=as.Date(Order.Date))
mutate(df, Order.Date=as.Date(Order.Date))
library(lubridate)
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Char to num type
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`)) %>%
# Char to date type
mutate(Order.Date=ymd(Order.Date))
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Char to num type
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`))
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Char to num type
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`)) %>%
# Char to date type
mutate(Order.Date=as.Date(Order.Date, format = "%Y.%m.%d"))
library(anytime)
install.packages("anydate")
library(anytime)
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Char to num type
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`)) %>%
# Char to date type
mutate(Order.Date=anydate(Order.Date))
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Filtering.R")
# ~~ LINE DATA ~~
# -- Num farms served --
`Number of Farms Served Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
unique() %>%
group_by(order_month) %>%
summarize(num_farms=n()) %>%
mutate(num_farms_cum=cumsum(num_farms)) %>%
na.omit()
# -- Num orders --
`Number of Orders Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
group_by(order_month) %>%
summarize(num_orders=n()) %>%
mutate(num_orders_cum=cumsum(num_orders)) %>%
na.omit()
# -- Order amount ($) --
`Order Amount ($) Monthly` <- df %>%
select(Order.Date, Order.Amount) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
group_by(order_month) %>%
summarize(`Total Order Amount ($)`=sum(Order.Amount, na.rm=T)) %>%
mutate(cumulative=cumsum(`Total Order Amount ($)`)) %>%
na.omit()
# -- Amount purchased (lb) --
`Pounds Purchased Monthly` <- df %>%
select(order_month, Pounds.Purchased) %>%
group_by(order_month) %>%
summarize(`Total Pounds Purchased`=sum(Pounds.Purchased, na.rm=T)) %>%
mutate(cumulative=cumsum(`Total Pounds Purchased`)) %>%
na.omit()
# ~~ LINE DATA ~~
# -- Num farms served --
`Number of Farms Served Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
unique() %>%
group_by(order_month) %>%
summarize(num_farms=n()) %>%
mutate(num_farms_cum=cumsum(num_farms)) %>%
na.omit()
# -- Num orders --
`Number of Orders Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
group_by(order_month) %>%
summarize(num_orders=n()) %>%
mutate(num_orders_cum=cumsum(num_orders)) %>%
na.omit()
# -- Order amount ($) --
`Order Amount ($) Monthly` <- df %>%
select(Order.Date, Order.Amount) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
group_by(order_month) %>%
summarize(`Total Order Amount ($)`=sum(Order.Amount, na.rm=T)) %>%
mutate(cumulative=cumsum(`Total Order Amount ($)`)) %>%
na.omit()
df %>%
select(Order.Date, Order.Amount)
View(df)
# -- Compiled 2019-2020 KCFS + CARES data, with pounds purchased fixed --
df <- read.csv("./Data/fix_pounds_purchased.csv") %>%
# Char to num type
mutate(`Pounds.Purchased`=as.numeric(`Pounds.Purchased`)) %>%
# Char to date type
mutate(Order.Date=anydate(Order.Date)) %>%
# Rename Order.Date
rename(Order.Amount=Order.Amount....)
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Filtering.R")
# ~~ LINE DATA ~~
# -- Num farms served --
`Number of Farms Served Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
unique() %>%
group_by(order_month) %>%
summarize(num_farms=n()) %>%
mutate(num_farms_cum=cumsum(num_farms)) %>%
na.omit()
# -- Num orders --
`Number of Orders Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
group_by(order_month) %>%
summarize(num_orders=n()) %>%
mutate(num_orders_cum=cumsum(num_orders)) %>%
na.omit()
# -- Order amount ($) --
`Order Amount ($) Monthly` <- df %>%
select(Order.Date, Order.Amount) %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month")) %>%
group_by(order_month) %>%
summarize(`Total Order Amount ($)`=sum(Order.Amount, na.rm=T)) %>%
mutate(cumulative=cumsum(`Total Order Amount ($)`)) %>%
na.omit()
# -- Amount purchased (lb) --
`Pounds Purchased Monthly` <- df %>%
select(order_month, Pounds.Purchased) %>%
group_by(order_month) %>%
summarize(`Total Pounds Purchased`=sum(Pounds.Purchased, na.rm=T)) %>%
mutate(cumulative=cumsum(`Total Pounds Purchased`)) %>%
na.omit()
# -- Create an order_month column (the year and month that an order was made)
df <- df %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month"))
# ~~ LINE DATA ~~
# -- Num farms served --
`Number of Farms Served Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
unique() %>%
group_by(order_month) %>%
summarize(num_farms=n()) %>%
mutate(num_farms_cum=cumsum(num_farms)) %>%
na.omit()
df <- df %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month"))
# ~~ LINE DATA ~~
# -- Num farms served --
`Number of Farms Served Monthly` <- df %>%
select(Farm.Name, Order.Date) %>%
unique() %>%
group_by(order_month) %>%
summarize(num_farms=n()) %>%
mutate(num_farms_cum=cumsum(num_farms)) %>%
na.omit()
# ~~ LINE DATA ~~
# -- Num farms served --
`Number of Farms Served Monthly` <- df %>%
select(Farm.Name, order_month) %>%
unique() %>%
group_by(order_month) %>%
summarize(num_farms=n()) %>%
mutate(num_farms_cum=cumsum(num_farms)) %>%
na.omit()
# -- Num orders --
`Number of Orders Monthly` <- df %>%
select(Farm.Name, order_month) %>%
group_by(order_month) %>%
summarize(num_orders=n()) %>%
mutate(num_orders_cum=cumsum(num_orders)) %>%
na.omit()
# -- Order amount ($) --
`Order Amount ($) Monthly` <- df %>%
select(order_month, Order.Amount) %>%
group_by(order_month) %>%
summarize(`Total Order Amount ($)`=sum(Order.Amount, na.rm=T)) %>%
mutate(cumulative=cumsum(`Total Order Amount ($)`)) %>%
na.omit()
# -- Amount purchased (lb) --
`Pounds Purchased Monthly` <- df %>%
select(order_month, Pounds.Purchased) %>%
group_by(order_month) %>%
summarize(`Total Pounds Purchased`=sum(Pounds.Purchased, na.rm=T)) %>%
mutate(cumulative=cumsum(`Total Pounds Purchased`)) %>%
na.omit()
# -- Funds disbursed ($) --
`Funds Disbursed ($) Yearly` <- funds %>%
group_by(year) %>%
summarize(total_funds=sum(funds_dispersed, na.rm = T)) %>%
mutate(total_funds_cum=cumsum(total_funds)) %>%
na.omit()
# ~~ MAP DATA ~~
# -- Set up map --
kingco <- readOGR(dsn="Data/kingco_shapefile/King_County_with_Natural_Shoreline_for_Puget_Sound_and_Lake_Washington___kingsh_area.shp")
wa <- map_data("county", "washington")
# -- Remove farms with no locations --
df_map <- df %>%
filter(!(Farm.Name == "Lily Fields"))
# -- Total Orders --
`Total Orders` <- df_map %>%
select(Farm.Name, Order.Date, lat, lon) %>%
group_by(Farm.Name, lat, lon) %>%
summarize(total=n()) %>%
na.omit()
# -- Total Order Amount ($) --
`Total Order Amount ($)` <- df_map %>%
select(Farm.Name, Order.Amount, lat, lon) %>%
group_by(Farm.Name, lat, lon) %>%
summarize(total=sum(Order.Amount)) %>%
na.omit()
View(df_map)
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
View(df)
# -- Add coords to the df --
farm_coords <- read_xlsx("./Data/farm_coords.xlsx")
df <- df %>%
left_join(farm_coords)
df <- df %>%
left_join(farm_coords)
# -- Add coords to the df --
farm_coords <- read_xlsx("./Data/farm_coords.xlsx")
df <- df %>%
left_join(farm_coords)
# Separate coords into lat & long
df <- df %>%
mutate(lat = as.numeric(gsub("^(.*?),.*", "\\1", Coordinates)),
lon = as.numeric(sub("^.*?,", "", Coordinates)))
# -- Add Order Month column
df <- df %>%
mutate(order_month=lubridate::floor_date(`Order Date`, "month"))
# -- Add Order Month column --
df <- df %>%
mutate(order_month=lubridate::floor_date(Order.Date, "month"))
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Compilation.R")
source("C:/Users/starr/Google Drive/Career Projects/Projects/Harvest Against Hunger Summer '21/harvest-against-hunger/Data/Data Filtering.R")
View(df_map)
runApp()
runApp()
runApp()
source("Functions.R")
source("Data/Data Filtering.R")
source("app_server.R")
source("app_ui.R")
source("Functions.R")
source("Data/Data Filtering.R")
source("Functions.R")
source("Data/Data Filtering.R")
View(farms)
View(`Number of Farms Served Monthly`)
View(`Number of Orders Monthly`)
View(`Order Amount ($) Monthly`)
View(`Pounds Purchased Monthly`)
View(`Total Order Amount ($)`)
View(`Total Orders`)
View(`Total Pounds Purchased`)
View(df)
runApp()
View(df)
runApp()
runApp()
source("Data/Data Filtering.R")
View(df_map)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Remove farms outside of King County
df_map <- df %>%
filter(!(Farm.Name == c("test", "test")))
runApp()
runApp()
runApp()
runApp()
